name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            ext: .exe
            python-version: '3.11'
          - os: ubuntu-latest
            platform: linux
            ext: ''
            python-version: '3.11'
          - os: macos-latest
            platform: macos
            ext: ''
            python-version: '3.11'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executables
      run: |
        # Build main launcher
        pyinstaller --onefile --windowed --name "ChessGame-${{ matrix.platform }}" --icon=assets/icon.ico main.py
        
        # Build individual games
        pyinstaller --onefile --windowed --name "ChessGame-SinglePlayer-${{ matrix.platform }}" --icon=assets/icon.ico chess_game.py
        pyinstaller --onefile --windowed --name "ChessGame-Multiplayer-${{ matrix.platform }}" --icon=assets/icon.ico chess_multiplayer.py

    - name: Create portable package (Windows)
      if: matrix.platform == 'windows'
      run: |
        mkdir ChessGame-Windows-Portable
        copy dist\*.exe ChessGame-Windows-Portable\
        copy README.md ChessGame-Windows-Portable\
        copy LICENSE ChessGame-Windows-Portable\ 2>nul || echo "No LICENSE file"
        echo "# Professional Chess Game - Windows Portable" > ChessGame-Windows-Portable\README-Portable.txt
        echo "" >> ChessGame-Windows-Portable\README-Portable.txt
        echo "Double-click ChessGame-windows.exe to start the game selector." >> ChessGame-Windows-Portable\README-Portable.txt
        echo "" >> ChessGame-Windows-Portable\README-Portable.txt
        echo "Or run individual games:" >> ChessGame-Windows-Portable\README-Portable.txt
        echo "- ChessGame-SinglePlayer-windows.exe (vs AI)" >> ChessGame-Windows-Portable\README-Portable.txt
        echo "- ChessGame-Multiplayer-windows.exe (two players)" >> ChessGame-Windows-Portable\README-Portable.txt
        
    - name: Create portable package (Linux)
      if: matrix.platform == 'linux'
      run: |
        mkdir ChessGame-Linux-Portable
        cp dist/* ChessGame-Linux-Portable/
        cp README.md ChessGame-Linux-Portable/
        cp LICENSE ChessGame-Linux-Portable/ 2>/dev/null || echo "No LICENSE file"
        chmod +x ChessGame-Linux-Portable/*
        echo "# Professional Chess Game - Linux Portable" > ChessGame-Linux-Portable/README-Portable.txt
        echo "" >> ChessGame-Linux-Portable/README-Portable.txt
        echo "Run ./ChessGame-linux to start the game selector." >> ChessGame-Linux-Portable/README-Portable.txt
        echo "" >> ChessGame-Linux-Portable/README-Portable.txt
        echo "Or run individual games:" >> ChessGame-Linux-Portable/README-Portable.txt
        echo "- ./ChessGame-SinglePlayer-linux (vs AI)" >> ChessGame-Linux-Portable/README-Portable.txt
        echo "- ./ChessGame-Multiplayer-linux (two players)" >> ChessGame-Linux-Portable/README-Portable.txt

    - name: Create portable package (macOS)
      if: matrix.platform == 'macos'
      run: |
        mkdir ChessGame-macOS-Portable
        cp dist/* ChessGame-macOS-Portable/
        cp README.md ChessGame-macOS-Portable/
        cp LICENSE ChessGame-macOS-Portable/ 2>/dev/null || echo "No LICENSE file"
        chmod +x ChessGame-macOS-Portable/*
        echo "# Professional Chess Game - macOS Portable" > ChessGame-macOS-Portable/README-Portable.txt
        echo "" >> ChessGame-macOS-Portable/README-Portable.txt
        echo "Run ./ChessGame-macos to start the game selector." >> ChessGame-macOS-Portable/README-Portable.txt
        echo "" >> ChessGame-macOS-Portable/README-Portable.txt
        echo "Or run individual games:" >> ChessGame-macOS-Portable/README-Portable.txt
        echo "- ./ChessGame-SinglePlayer-macos (vs AI)" >> ChessGame-macOS-Portable/README-Portable.txt
        echo "- ./ChessGame-Multiplayer-macos (two players)" >> ChessGame-macOS-Portable/README-Portable.txt

    - name: Create ZIP archive (Windows)
      if: matrix.platform == 'windows'
      run: |
        powershell Compress-Archive -Path ChessGame-Windows-Portable\* -DestinationPath ChessGame-Windows-v${{ github.ref_name || github.event.inputs.version }}.zip

    - name: Create ZIP archive (Linux/macOS)
      if: matrix.platform != 'windows'
      run: |
        zip -r ChessGame-${{ matrix.platform }}-v${{ github.ref_name || github.event.inputs.version }}.zip ChessGame-${{ matrix.platform }}-Portable/

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: chess-game-${{ matrix.platform }}
        path: |
          ChessGame-${{ matrix.platform }}-v*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        release_name: Professional Chess Game ${{ github.ref_name || github.event.inputs.version }}
        body: |
          ## ðŸŽ¯ Professional Chess Game Release ${{ github.ref_name || github.event.inputs.version }}
          
          ### ðŸŽ® What's New
          - High-performance chess implementation with modern GUI
          - Two game modes: Single Player vs AI and Two Player local multiplayer
          - Complete chess rules including castling, en passant, and pawn promotion
          - Beautiful dark theme interface with visual move indicators
          - Professional code architecture using functional programming
          
          ### ðŸ“¦ Downloads
          Choose your platform:
          
          - **Windows**: Download `ChessGame-Windows-v*.zip`
          - **Linux**: Download `ChessGame-linux-v*.zip` 
          - **macOS**: Download `ChessGame-macos-v*.zip`
          
          ### ðŸš€ Quick Start
          1. Download the appropriate package for your operating system
          2. Extract the ZIP file
          3. Run the main executable to open the game mode selector
          
          ### ðŸŽ¯ Game Modes
          - **ðŸ¤– Single Player**: Challenge the AI opponent
          - **ðŸ‘¥ Two Player**: Play with a friend locally
          
          ### ðŸ”§ System Requirements
          - No additional software required - fully portable!
          - Works on Windows 10+, Linux (most distributions), macOS 10.14+
          
          ### ðŸ“– Full Documentation
          See the included README.md for complete instructions and features.
          
          ---
          
          Enjoy this beautiful implementation of the classic game of Chess! â™”â™•â™–â™—â™˜â™™
        draft: false
        prerelease: false
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chess-game-windows/ChessGame-windows-v${{ github.ref_name || github.event.inputs.version }}.zip
        asset_name: ChessGame-Windows-v${{ github.ref_name || github.event.inputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chess-game-linux/ChessGame-linux-v${{ github.ref_name || github.event.inputs.version }}.zip
        asset_name: ChessGame-Linux-v${{ github.ref_name || github.event.inputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chess-game-macos/ChessGame-macos-v${{ github.ref_name || github.event.inputs.version }}.zip
        asset_name: ChessGame-macOS-v${{ github.ref_name || github.event.inputs.version }}.zip
        asset_content_type: application/zip